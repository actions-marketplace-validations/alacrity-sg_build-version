name: Build Version Build Workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  GOLANG_VERSION: 1.24
permissions:
  contents: write
  pull-requests: read
jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            type: linux
            arch: amd64
          - os: ubuntu-24.04-arm
            type: linux
            arch: arm64
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set Committer Details
        run: |
          git config --global user.name "validate"
          git config --global user.email "validate@alacrity.sg"
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Install Dependencies
        run: go mod download
      - name: Run Tests
        run: go test -v ./...
      - name: Build Binary
        run: CGO_ENABLED=0 GOOS=${{ matrix.type }} GOARCH=${{ matrix.arm64 }} go build -o build-version_${{ matrix.type }}_${{ matrix.arch }} .
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-version_${{ matrix.type }}_${{ matrix.arch }}
          path: build-version_${{ matrix.type }}_${{ matrix.arch }}
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-binaries]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/download-artifact@v4
        with:
          path: "artifacts"
          pattern: build-version_*
          merge-multiple: true
      - run: ls -R .
      - name: Generate Version
        id: generate-version
        run: |
          chmod +x ./artifacts/*
          ./artifacts/build-version_linux_amd64 -repo-path=. -output-file=build-version.env
          cat build-version.env >> "$GITHUB_OUTPUT"
          cat build-version.env >> "$GITHUB_ENV"
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.BUILD_VERSION }}
          files: |
            artifacts/*
          make_latest: ${{ github.ref_name == 'main' && 'true' || 'false' }}
      # - name: Publish Action
      #   if: ${{ github.ref_name == 'main' }}
      #   uses: actions/publish-action@8a4b4f687b72f481b8a241ef71f38857239698fc
      #   with:
      #     source-tag: v${{ env.BUILD_VERSION }}
